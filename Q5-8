from sklearn.tree import DecisionTreeClassifier
from sklearn.preprocessing import LabelEncoder
import pandas as pd

# Load the dataset from a CSV file
file_path = 'path_to_your_file.csv'  # Replace with the actual file path
df = pd.read_csv(file_path)

# Display the first few rows to confirm the structure
print("Dataset Preview:")
print(df.head())

# Encode categorical variables using LabelEncoder
le = LabelEncoder()
encoded_df = df.apply(le.fit_transform)

# Separate features and target variable
X = encoded_df.drop('Buys', axis=1)
y = encoded_df['Buys']

# Train a Decision Tree Classifier
model = DecisionTreeClassifier(criterion='entropy', random_state=42)
model.fit(X, y)

# Prepare the test data
test_data = pd.DataFrame({
    'Age': ['<21'],
    'Income': ['Low'],
    'Gender': ['Female'],
    'Marital Status': ['Married']
})

# Encode the test data using the same encoder for consistency
encoded_test_data = test_data.apply(lambda col: le.fit_transform(col) if col.name in df.columns else col)

# Make a prediction
prediction = model.predict(encoded_test_data)
predicted_label = 'Yes' if prediction[0] == 1 else 'No'  # Map prediction back to original target labels

print(f"The prediction for the test data is: {predicted_label}")
